let logger = require( '../lib/logger' );
let {
        getScaffold,
        readFile
    }      = require( '../lib/util' );

let templatePath;

module.exports = function ( pageName, templateName ) {

    let pkg            = require( '../package.json' );
    let download       = require( '../lib/download' );
    let {findTemplate} = require( '../lib/util' );

    download( pkg.z3conf.template )
    // 找到临时模板目录
        .then( res => findTemplate( templateName, res.path ) )
        .then( setGlobalTemplatePath )
        .then( findPageTempPath )
        .then( path => createFilesByTemp( pageName, path ) )
        .catch( logger.fatal );
};

/**
 * 缓存一下已找到的模板路径
 */
function setGlobalTemplatePath( path ) {
    templatePath = path;
    return templatePath;
}

function findPageTempPath( path ) {
    return require( 'path' ).join( path, '/tmp' );
}

function createFilesByTemp( pageName, path ) {

    const MAP = [
        {
            ext: 'vue'
        },
        {
            ext     : 'md',
            fileName: 'README'
        }
    ];


}


/**
 * 生成工作目录的文件路径
 *
 * @param {String} dirName 创建的新页面名称
 * @param {String} ext      文件后缀名
 * @param {String} [fileName]  指定文件名，可选，默认为新页面名称
 * @returns {string}
 */
function getCurrentWorkingPath( dirName, ext, fileName ) {
    let process = require( 'process' );
    return [
        process.cwd(),
        '/page/',
        dirName,
        '/',
        (fileName || dirName),
        '.',
        ext
    ].join( '' );
}


/**
 * 向目标文件夹灌输模板数据，并替换占位表达式
 *
 * @param {String} ext
 * @param {String} fileName
 */
function overwrites( ext, fileName ) {
    let fs = require( 'fs-extra' );

    return fs.readFile(
        getAbsPath( '../tmp/' + (fileName || 'tmp') + '.' + ext ), 'utf8'
    ).then( data => fs.outputFile(
        getCurrentWorkingPath( pageName, ext, fileName ),
        replace( data )
    ) );
}


/**
 * 获取z3里模板文件的路径绝对路径
 *
 * @param {String} p
 */
function getAbsPath( p ) {
    return path.resolve( __dirname, p );
}

